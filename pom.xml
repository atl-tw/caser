<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>caser</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>caser</name>
    <url>https://github.com/atl-tw</url>
    <description>A command line tool for converting between common multiword token formats</description>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.10.2</junit.version>
        <native.maven.plugin.version>0.9.28</native.maven.plugin.version>
        <imageName>caser</imageName>
        <main.class>com.thoughtworks.caser.App</main.class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.0.0-jre</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>failureaccess</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>listenablefuture</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jcommander</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.83</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.32</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.8.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>
            <version>1.1.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.2</version>
                <configuration>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <artifactSet>
                        <excludes>
                            <exclude>com.google.code.findbugs:*</exclude>
                            <exclude>org.checkerframework:*</exclude>
                            <exclude>com.google.errorprone:*</exclude>
                            <exclude>com.google.j2objc</exclude>
                        </excludes>
                    </artifactSet>
                    <filters>
                        <filter>
                            <artifact>com.google.guava:guava</artifact>
                            <includes>
                                <include>com/google/common/base/Ascii.class</include>
                                <include>com/google/common/base/CharMatcher*</include>
                                <include>com/google/common/base/Predicate.class</include>
                                <include>com/google/common/base/Preconditions.class</include>
                            </includes>
                        </filter>
                    </filters>
                    <transformers>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>${main.class}</mainClass>
                        </transformer>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!-- Arranges the permissions of the final archive -->
                    <archiverConfig>
                        <fileMode>0755</fileMode>
                        <directoryMode>0755</directoryMode>
                        <defaultDirectoryMode>0755</defaultDirectoryMode>
                    </archiverConfig>
                </configuration>
                <executions>
                    <execution>
                        <id>anyos</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <appendAssemblyId>true</appendAssemblyId>
                            <attach>true</attach>
                            <descriptors>
                                <!-- All the details on how to make the distribution zip -->
                                <descriptor>src/main/assembly/anyos.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.3.5</version>
                <executions>
                    <execution>
                        <id>replaceTokens</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <file>src/main/nsis/install.nsi</file>
                            <outputFile>
                                target/${project.artifactId}-${project.version}-anyos/${project.artifactId}-${project.version}/install.nsi
                            </outputFile>
                            <replacements>
                                <replacement>
                                    <token>@artifactId@</token>
                                    <value>${project.artifactId}</value>
                                </replacement>
                                <replacement>
                                    <token>@version@</token>
                                    <value>${project.version}</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>prepare-tap</id>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <file>src/main/brew/Formula.rb</file>
                            <outputFile>
                                brew/${project.artifactId}/Formula/${project.artifactId}.rb
                            </outputFile>
                            <replacements>
                                <replacement>
                                    <token>@artifactId@</token>
                                    <value>${project.artifactId}</value>
                                </replacement>
                                <replacement>
                                    <token>@version@</token>
                                    <value>${project.version}</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.digitalmediaserver</groupId>
                <artifactId>nsis-maven-plugin</artifactId>
                <version>1.0.6</version>
                <configuration>
                    <compress>auto</compress>
                    <compression>lzma</compression>
                    <compressionIsFinal>true</compressionIsFinal>
                    <compressionDictSize>64</compressionDictSize>
                </configuration>
                <executions>
                    <execution>
                        <id>build-windows-installer</id>
                        <goals>
                            <goal>make</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <attachArtifact>true</attachArtifact>
                            <scriptFile>
                                target/${project.artifactId}-${project.version}-anyos/${project.artifactId}-${project.version}/install.nsi
                            </scriptFile>
                            <outputFile>${project.artifactId}-${project.version}-installer.exe</outputFile>
                            <attachArtifact>false</attachArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>sha256</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>bash</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-c</argument>
                                <argument>sha256sum ${project.artifactId}-${project.version}*.* &gt;&gt; ${project.artifactId}-${project.version}-hashes.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <name>osname.short</name>
                            <value>${os.name}</value>
                            <regex>([^\s]*).*</regex>
                            <replacement>$1</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-installer</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-${project.version}-installer.exe
                                    </file>
                                    <type>exe</type>
                                    <classifier>installer</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-${project.version}-hashes.txt</file>
                                    <type>txt</type>
                                    <classifier>hashes</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>attach-binary</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>
                                                ${project.build.directory}/${project.artifactId}-${osname.short}-${os.arch}
                                            </file>
                                            <type>bin</type>
                                            <classifier>${osname.short}-${os.arch}</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>${native.maven.plugin.version}</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <imageName>${project.artifactId}-${osname.short}-${os.arch}</imageName>
                            <pluginArtifacts>
                                <artifact>${project.artifactId}-${osname.short}-${os.arch}</artifact>
                            </pluginArtifacts>
                            <fallback>false</fallback>
                            <buildArgs>
                                <buildArg>-H:DashboardDump=${project.artifactId} -H:+DashboardAll -march=native
                                    --enable-sbom -H:IncludeSBOM=cyclonedx
                                </buildArg>
                            </buildArgs>
                            <agent>
                                <enabled>true</enabled>
                                <defaultMode>Standard</defaultMode>
                            </agent>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>java-agent</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <executable>java</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath/>
                                        <argument>${main.class}</argument>
                                        <argument>-i</argument>
                                        <argument>lower-hyphen</argument>
                                        <argument>-o</argument>
                                        <argument>UPPER_SNAKE</argument>
                                        <argument>this-is-my-test</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
